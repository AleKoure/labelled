
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "crosswalkr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('crosswalkr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("encodefrom")
> ### * encodefrom
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: encodefrom
> ### Title: Encode data frame column using external crosswalk file.
> ### Aliases: encodefrom encodefrom_
> 
> ### ** Examples
> 
> df <- data.frame(state = c('Kentucky','Tennessee','Virginia'),
+                  stfips = c(21,47,51),
+                  cenregnm = c('South','South','South'))
> 
> df_tbl <- tibble::as_data_frame(df)
> 
> cw <- get(data(stcrosswalk))
> 
> df$state2 <- encodefrom(df, state, cw, stname, stfips, stabbr)
> df_tbl$state2 <- encodefrom(df_tbl, state, cw, stname, stfips, stabbr)
> df_tbl$state3 <- encodefrom(df_tbl, state, cw, stname, stfips, stabbr,
+                             ignore_tibble = TRUE)
> 
> haven::as_factor(df_tbl)
[38;5;246m# A tibble: 3 x 5[39m
  state     stfips cenregnm state2 state3
  [3m[38;5;246m<fct>[39m[23m      [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<fct>[39m[23m    [3m[38;5;246m<fct>[39m[23m  [3m[38;5;246m<fct>[39m[23m 
[38;5;250m1[39m Kentucky      21 South    KY     KY    
[38;5;250m2[39m Tennessee     47 South    TN     TN    
[38;5;250m3[39m Virginia      51 South    VA     VA    
> haven::zap_labels(df_tbl)
[38;5;246m# A tibble: 3 x 5[39m
  state     stfips cenregnm state2 state3
  [3m[38;5;246m<fct>[39m[23m      [3m[38;5;246m<dbl>[39m[23m [3m[38;5;246m<fct>[39m[23m    [3m[38;5;246m<chr>[39m[23m  [3m[38;5;246m<fct>[39m[23m 
[38;5;250m1[39m Kentucky      21 South    21     KY    
[38;5;250m2[39m Tennessee     47 South    47     TN    
[38;5;250m3[39m Virginia      51 South    51     VA    
> 
> 
> 
> cleanEx()
> nameEx("renamefrom")
> ### * renamefrom
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: renamefrom
> ### Title: Rename data frame columns using external crosswalk file.
> ### Aliases: renamefrom renamefrom_
> 
> ### ** Examples
> 
> df <- data.frame(state = c('Kentucky','Tennessee','Virginia'),
+                  fips = c(21,47,51),
+                  region = c('South','South','South'))
> 
> cw <- data.frame(old_name = c('state','fips'),
+                  new_name = c('stname','stfips'),
+                  label = c('Full state name', 'FIPS code'))
> 
> df1 <- renamefrom(df, cw, old_name, new_name, label)
> df2 <- renamefrom(df, cw, old_name, new_name, name_label = TRUE)
> df3 <- renamefrom(df, cw, old_name, new_name, drop_extra = FALSE)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.54 0.03 0.57 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
