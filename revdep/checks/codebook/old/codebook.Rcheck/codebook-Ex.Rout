
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "codebook"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('codebook')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("aggregate_and_document_scale")
> ### * aggregate_and_document_scale
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: aggregate_and_document_scale
> ### Title: Aggregate variables and remember which variables this were
> ### Aliases: aggregate_and_document_scale
> 
> ### ** Examples
> 
> testdf <- data.frame(bfi_neuro_1 = rnorm(20), bfi_neuro_2 = rnorm(20),
+                     bfi_neuro_3R = rnorm(20), age = rpois(20, 30))
> item_names <- c('bfi_neuro_1', 'bfi_neuro_2', 'bfi_neuro_3R')
> testdf$bfi_neuro <- aggregate_and_document_scale(testdf[, item_names])
> testdf$bfi_neuro
 [1]  0.042666655  0.237472648 -0.021366751  0.054197435  0.086859275
 [6] -0.528030760  0.232071836  0.012035082 -0.004904972  0.331220300
[11]  1.089522200 -0.108323628  0.035850241 -1.132622675  0.393631688
[16]  0.506823909 -0.259233898 -0.053203937  0.830322065  0.407340822
attr(,"scale_item_names")
[1] "bfi_neuro_1"  "bfi_neuro_2"  "bfi_neuro_3R"
attr(,"label")
[1] "3 bfi_neuro items aggregated by rowMeans"
> 
> 
> 
> cleanEx()
> nameEx("asis_knit_child")
> ### * asis_knit_child
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: asis_knit_child
> ### Title: Knit a child document and output as is (render markup)
> ### Aliases: asis_knit_child
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # an example of a wrapper function that calls asis_knit_child with an argument
> ##D # ensures distinct paths for cache and figures, so that these calls can be looped in parallel
> ##D regression_summary <- function(model) {
> ##D    hash <- digest::digest(model)
> ##D    options <- list(
> ##D        fig.path = paste0(knitr::opts_chunk$get("fig.path"), hash, "-"),
> ##D        cache.path = paste0(knitr::opts_chunk$get("cache.path"), hash, "-"))
> ##D    asis_knit_child("_regression_summary.Rmd", options = options)
> ##D }
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("codebook")
> ### * codebook
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: codebook
> ### Title: Generate rmarkdown codebook
> ### Aliases: codebook
> 
> ### ** Examples
> 
> # will generate figures in a temporary directory
> old_base_dir <- knitr::opts_knit$get("base.dir")
> knitr::opts_knit$set(base.dir = tempdir())
> on.exit(knitr::opts_knit$set(base.dir = old_base_dir))
> data("bfi")
> bfi <- bfi[, c("BFIK_open_1", "BFIK_open_1")]
> md <- codebook(bfi, survey_repetition = "single", metadata_table = FALSE)
No missings.
> 
> 
> 
> cleanEx()

detaching ‘package:bindrcpp’

> nameEx("codebook_component_scale")
> ### * codebook_component_scale
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: codebook_component_scale
> ### Title: Codebook component for scales
> ### Aliases: codebook_component_scale
> 
> ### ** Examples
> 
> # will generate figures in a temporary directory
> old_base_dir <- knitr::opts_knit$get("base.dir")
> knitr::opts_knit$set(base.dir = tempdir())
> on.exit(knitr::opts_knit$set(base.dir = old_base_dir))
> data("bfi")
> bfi <- bfi[,c("BFIK_open", paste0("BFIK_open_", 1:4))]
> codebook_component_scale(bfi[,1], "BFIK_open", bfi[,-1],
+    reliabilities = list(BFIK_open = psych::alpha(bfi[,-1])))
Error: C stack usage  7971584 is too close to the limit
Execution halted
