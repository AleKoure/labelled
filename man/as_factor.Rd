% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/as_factor.R
\name{as_factor}
\alias{as_factor}
\alias{as_factor.default}
\alias{as_factor.labelled}
\title{Convert input to a factor.}
\usage{
as_factor(x, ...)

\method{as_factor}{default}(x, ...)

\method{as_factor}{labelled}(x, levels = c("labels", "values", "prefixed"),
  ordered = FALSE, missing_to_na = TRUE, nolabel_to_na = FALSE,
  quiet = FALSE, ...)
}
\arguments{
\item{x}{Object to coerce to a factor.}

\item{...}{Other arguments passed down to method.}

\item{levels}{What should be used for the factor levels: the labels, the values or labels prefixed with values?}

\item{ordered}{\code{TRUE} for ordinal factors, \code{FALSE} (default) for nominal factors.}

\item{missing_to_na}{Should defined missing values be converted to `NA`?}

\item{nolabel_to_na}{Should values with no label be converted to `NA`?}

\item{quiet}{Hide messages?}
}
\description{
The base function \code{\link[base]{as.factor}} is not a generic, but this variant
is. By default, \code{as_factor} is a wrapper for \code{\link[base]{factor}}.
}
\details{
The order of the returned factor levels will be the order of value labels, except if some values doesn't have
  a label and \code{nolabel_to_na} is \code{FALSE}. In such case, automatic labels will be created and levels will be
  ordered according to values. To order labels before calling \code{as_factor}, see \code{\link{sort_val_labels}}.
}
\examples{
v <- labelled(c(1,2,2,2,3,9,1,3,2,NA), c(yes = 1, no = 3, "don't know" = 9), c(F, F, T))
as_factor(v)
as_factor(v, missing_to_na = FALSE, nolabel_to_na = TRUE)
as_factor(v, "p")

x <- labelled(c("H", "M", "H", "L"), c(low = "L", medium = "M", high = "H"))
as_factor(x, ordered = TRUE)
}

